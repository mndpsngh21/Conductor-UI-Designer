{"ast":null,"code":"var _jsxFileName = \"/media/mandeep/Files/R&D/Workflow-Designer/frontend/src/TestFlow.js\",\n  _s = $RefreshSig$();\n// src/TestFlow.js\n\nimport React from 'react';\nimport ReactFlow, { Background, Controls, MiniMap } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestFlow = () => {\n  _s();\n  const initialNodes = [{\n    id: '1',\n    data: {\n      label: 'Node 1'\n    },\n    position: {\n      x: 100,\n      y: 100\n    }\n  }, {\n    id: '2',\n    data: {\n      label: 'Node 2'\n    },\n    position: {\n      x: 300,\n      y: 100\n    }\n  }];\n  const initialEdges = [{\n    id: 'e1-2',\n    source: '1',\n    target: '2'\n  }];\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(TestFlow, \"mmoxFmHOvuuD77aIm5gUqDEdUKU=\", true);\n_c = TestFlow;\nexport default TestFlow;\nvar _c;\n$RefreshReg$(_c, \"TestFlow\");","map":{"version":3,"names":["React","ReactFlow","Background","Controls","MiniMap","jsxDEV","_jsxDEV","TestFlow","_s","initialNodes","id","data","label","position","x","y","initialEdges","source","target","nodes","setNodes","onNodesChange","useNodesState","edges","setEdges","onEdgesChange","useEdgesState","onConnect","useCallback","params","eds","addEdge","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/mandeep/Files/R&D/Workflow-Designer/frontend/src/TestFlow.js"],"sourcesContent":["// src/TestFlow.js\n\nimport React from 'react';\nimport ReactFlow, { Background, Controls, MiniMap } from 'react-flow-renderer';\n\nconst TestFlow = () => {\n    const initialNodes = [\n        { id: '1', data: { label: 'Node 1' }, position: { x: 100, y: 100 } },\n        { id: '2', data: { label: 'Node 2' }, position: { x: 300, y: 100 } },\n    ];\n\n    const initialEdges = [\n        { id: 'e1-2', source: '1', target: '2' },\n    ];\n    const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n    const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  \n    const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), [setEdges]);\n  \n    return (\n        <div style={{ height: '100vh' }}>\n                <ReactFlow\n                nodes={nodes}\n                edges={edges}\n                onNodesChange={onNodesChange}\n                onEdgesChange={onEdgesChange}\n                onConnect={onConnect}\n                >\n                <Background />\n                <Controls />\n                <MiniMap />\n            </ReactFlow>\n        </div>\n    );\n};\n\nexport default TestFlow;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,YAAY,GAAG,CACjB;IAAEC,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE;MAAEC,KAAK,EAAE;IAAS,CAAC;IAAEC,QAAQ,EAAE;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAI;EAAE,CAAC,EACpE;IAAEL,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE;MAAEC,KAAK,EAAE;IAAS,CAAC;IAAEC,QAAQ,EAAE;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAI;EAAE,CAAC,CACvE;EAED,MAAMC,YAAY,GAAG,CACjB;IAAEN,EAAE,EAAE,MAAM;IAAEO,MAAM,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,CAC3C;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGC,aAAa,CAACb,YAAY,CAAC;EACpE,MAAM,CAACc,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGC,aAAa,CAACV,YAAY,CAAC;EAEpE,MAAMW,SAAS,GAAGC,WAAW,CAAEC,MAAM,IAAKL,QAAQ,CAAEM,GAAG,IAAKC,OAAO,CAACF,MAAM,EAAEC,GAAG,CAAC,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAE9F,oBACIlB,OAAA;IAAK0B,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eACxB5B,OAAA,CAACL,SAAS;MACVkB,KAAK,EAAEA,KAAM;MACbI,KAAK,EAAEA,KAAM;MACbF,aAAa,EAAEA,aAAc;MAC7BI,aAAa,EAAEA,aAAc;MAC7BE,SAAS,EAAEA,SAAU;MAAAO,QAAA,gBAErB5B,OAAA,CAACJ,UAAU;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdhC,OAAA,CAACH,QAAQ;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACZhC,OAAA,CAACF,OAAO;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd,CAAC;AAAC9B,EAAA,CA7BID,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}