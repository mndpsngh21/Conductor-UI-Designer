{"ast":null,"code":"var _jsxFileName = \"/media/mandeep/Files/R&D/Workflow-Designer/frontend/src/context/WorkflowContext.js\",\n  _s = $RefreshSig$();\n// src/context/WorkflowContext.js\n\nimport React, { createContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport nodeOptions from '../data/nodeOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WorkflowContext = /*#__PURE__*/createContext();\nexport const WorkflowProvider = ({\n  children\n}) => {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: '1',\n    type: 'start',\n    data: {\n      label: 'Start'\n    },\n    position: {\n      x: 250,\n      y: 5\n    }\n  }]);\n  const [edges, setEdges] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [future, setFuture] = useState([]);\n  const addNode = (sourceNode, option) => {\n    const newNodeId = uuidv4();\n    const newNode = {\n      id: newNodeId,\n      type: option.type,\n      data: {\n        label: option.label\n      },\n      position: {\n        x: sourceNode.position.x + 150,\n        y: sourceNode.position.y + 100\n      }\n    };\n    const newNodes = [...nodes, newNode];\n    const newEdge = {\n      id: `${sourceNode.id}-${newNodeId}`,\n      source: sourceNode.id,\n      target: newNodeId\n    };\n    const newEdges = [...edges, newEdge];\n    setHistory([...history, {\n      nodes,\n      edges\n    }]);\n    setFuture([]);\n    setNodes(newNodes);\n    setEdges(newEdges);\n  };\n  const updateNode = (id, newData) => {\n    const updatedNodes = nodes.map(node => node.id === id ? {\n      ...node,\n      data: {\n        ...node.data,\n        ...newData\n      }\n    } : node);\n    setHistory([...history, {\n      nodes,\n      edges\n    }]);\n    setFuture([]);\n    setNodes(updatedNodes);\n  };\n  const undo = () => {\n    if (history.length === 0) return;\n    const previous = history[history.length - 1];\n    const newHistory = history.slice(0, history.length - 1);\n    setHistory(newHistory);\n    setFuture([{\n      nodes,\n      edges\n    }, ...future]);\n    setNodes(previous.nodes);\n    setEdges(previous.edges);\n  };\n  const redo = () => {\n    if (future.length === 0) return;\n    const next = future[0];\n    const newFuture = future.slice(1);\n    setHistory([...history, {\n      nodes,\n      edges\n    }]);\n    setFuture(newFuture);\n    setNodes(next.nodes);\n    setEdges(next.edges);\n  };\n  const saveWorkflow = (workflowName, version) => {\n    const workflowDef = {\n      name: workflowName,\n      version: version,\n      tasks: nodes.map(node => ({\n        name: node.data.label,\n        taskReferenceName: node.id,\n        type: node.type\n        // Add additional task properties as needed\n      }))\n      // Define workflow-level properties\n    };\n\n    // Integrate with Netflix Conductor API\n    // Example: createWorkflow(workflowDef).then(...).catch(...);\n  };\n  return /*#__PURE__*/_jsxDEV(WorkflowContext.Provider, {\n    value: {\n      nodes,\n      setNodes,\n      edges,\n      setEdges,\n      addNode,\n      updateNode,\n      undo,\n      redo,\n      saveWorkflow\n    },\n    children: [\"Demo\", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkflowProvider, \"Ji+tid0KEM1UNJfWob/hxldjGy4=\");\n_c = WorkflowProvider;\nvar _c;\n$RefreshReg$(_c, \"WorkflowProvider\");","map":{"version":3,"names":["React","createContext","useState","v4","uuidv4","nodeOptions","jsxDEV","_jsxDEV","WorkflowContext","WorkflowProvider","children","_s","nodes","setNodes","id","type","data","label","position","x","y","edges","setEdges","history","setHistory","future","setFuture","addNode","sourceNode","option","newNodeId","newNode","newNodes","newEdge","source","target","newEdges","updateNode","newData","updatedNodes","map","node","undo","length","previous","newHistory","slice","redo","next","newFuture","saveWorkflow","workflowName","version","workflowDef","name","tasks","taskReferenceName","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/mandeep/Files/R&D/Workflow-Designer/frontend/src/context/WorkflowContext.js"],"sourcesContent":["// src/context/WorkflowContext.js\n\nimport React, { createContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport nodeOptions from '../data/nodeOptions';\n\nexport const WorkflowContext = createContext();\n\nexport const WorkflowProvider = ({ children }) => {\n  const [nodes, setNodes] = useState([\n    {\n      id: '1',\n      type: 'start',\n      data: { label: 'Start' },\n      position: { x: 250, y: 5 },\n    },\n  ]);\n\n  const [edges, setEdges] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [future, setFuture] = useState([]);\n\n  const addNode = (sourceNode, option) => {\n    const newNodeId = uuidv4();\n    const newNode = {\n      id: newNodeId,\n      type: option.type,\n      data: { label: option.label },\n      position: {\n        x: sourceNode.position.x + 150,\n        y: sourceNode.position.y + 100,\n      },\n    };\n\n    const newNodes = [...nodes, newNode];\n    const newEdge = {\n      id: `${sourceNode.id}-${newNodeId}`,\n      source: sourceNode.id,\n      target: newNodeId,\n    };\n    const newEdges = [...edges, newEdge];\n\n    setHistory([...history, { nodes, edges }]);\n    setFuture([]);\n\n    setNodes(newNodes);\n    setEdges(newEdges);\n  };\n\n  const updateNode = (id, newData) => {\n    const updatedNodes = nodes.map((node) =>\n      node.id === id ? { ...node, data: { ...node.data, ...newData } } : node\n    );\n\n    setHistory([...history, { nodes, edges }]);\n    setFuture([]);\n\n    setNodes(updatedNodes);\n  };\n\n  const undo = () => {\n    if (history.length === 0) return;\n    const previous = history[history.length - 1];\n    const newHistory = history.slice(0, history.length - 1);\n    setHistory(newHistory);\n    setFuture([{ nodes, edges }, ...future]);\n    setNodes(previous.nodes);\n    setEdges(previous.edges);\n  };\n\n  const redo = () => {\n    if (future.length === 0) return;\n    const next = future[0];\n    const newFuture = future.slice(1);\n    setHistory([...history, { nodes, edges }]);\n    setFuture(newFuture);\n    setNodes(next.nodes);\n    setEdges(next.edges);\n  };\n\n  const saveWorkflow = (workflowName, version) => {\n    const workflowDef = {\n      name: workflowName,\n      version: version,\n      tasks: nodes.map((node) => ({\n        name: node.data.label,\n        taskReferenceName: node.id,\n        type: node.type,\n        // Add additional task properties as needed\n      })),\n      // Define workflow-level properties\n    };\n\n    // Integrate with Netflix Conductor API\n    // Example: createWorkflow(workflowDef).then(...).catch(...);\n  };\n\n  return (\n    <WorkflowContext.Provider\n      value={{\n        nodes,\n        setNodes,\n        edges,\n        setEdges,\n        addNode,\n        updateNode,\n        undo,\n        redo,\n        saveWorkflow,\n      }}\n    >\n      Demo\n      {children}\n    </WorkflowContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}