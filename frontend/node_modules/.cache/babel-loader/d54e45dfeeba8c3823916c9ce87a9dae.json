{"ast":null,"code":"var _jsxFileName = \"/media/mandeep/Files/R&D/Workflow-Designer/frontend/src/Flow.js\",\n  _s = $RefreshSig$();\n// src/Flow.js\n\nimport React, { useState } from 'react';\nimport ReactFlow, { Background, Controls, Handle, Position } from 'react-flow-renderer';\nimport Sidebar from './components/Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flow = () => {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: '1',\n    type: 'start',\n    data: {\n      label: 'Start'\n    },\n    position: {\n      x: 250,\n      y: 5\n    }\n  }]);\n  const [edges, setEdges] = useState([]);\n  const addNode = (type, position) => {\n    const id = `${nodes.length + 1}`; // Generate a unique ID\n    const newNode = {\n      id,\n      type,\n      data: {\n        label: type\n      },\n      position\n    };\n    setNodes(prevNodes => [...prevNodes, newNode]);\n  };\n  const addEdge = (source, target) => {\n    const newEdge = {\n      id: `${source}-${target}`,\n      source,\n      target\n    };\n    setEdges(prevEdges => [...prevEdges, newEdge]);\n  };\n  const onConnect = params => {\n    addEdge(params.source, params.target);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flow-container\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: [...nodes, ...edges],\n      onConnect: onConnect,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#aaa\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Flow, \"dMi3dSi/d/ARIer1nc6wbRLYwDE=\");\n_c = Flow;\nexport default Flow;\nvar _c;\n$RefreshReg$(_c, \"Flow\");","map":{"version":3,"names":["React","useState","ReactFlow","Background","Controls","Handle","Position","Sidebar","jsxDEV","_jsxDEV","Flow","_s","nodes","setNodes","id","type","data","label","position","x","y","edges","setEdges","addNode","length","newNode","prevNodes","addEdge","source","target","newEdge","prevEdges","onConnect","params","className","children","elements","style","width","height","color","gap","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/mandeep/Files/R&D/Workflow-Designer/frontend/src/Flow.js"],"sourcesContent":["// src/Flow.js\n\nimport React, { useState } from 'react';\nimport ReactFlow, { Background, Controls, Handle, Position } from 'react-flow-renderer';\nimport Sidebar from './components/Sidebar';\n\nconst Flow = () => {\n  const [nodes, setNodes] = useState([\n    {\n      id: '1',\n      type: 'start',\n      data: { label: 'Start' },\n      position: { x: 250, y: 5 },\n    },\n  ]);\n\n  const [edges, setEdges] = useState([]);\n\n  const addNode = (type, position) => {\n    const id = `${nodes.length + 1}`; // Generate a unique ID\n    const newNode = {\n      id,\n      type,\n      data: { label: type },\n      position,\n    };\n    setNodes((prevNodes) => [...prevNodes, newNode]);\n  };\n\n  const addEdge = (source, target) => {\n    const newEdge = { id: `${source}-${target}`, source, target };\n    setEdges((prevEdges) => [...prevEdges, newEdge]);\n  };\n\n  const onConnect = (params) => {\n    addEdge(params.source, params.target);\n  };\n\n  return (\n    <div className=\"flow-container\">\n\n      <ReactFlow\n        elements={[...nodes, ...edges]}\n        onConnect={onConnect}\n        style={{ width: '100%', height: '100%' }}\n      >\n        <Background color=\"#aaa\" gap={16} />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default Flow;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,qBAAqB;AACvF,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CACjC;IACEa,EAAE,EAAE,GAAG;IACPC,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAC;IACxBC,QAAQ,EAAE;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAE;EAC3B,CAAC,CACF,CAAC;EAEF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMsB,OAAO,GAAGA,CAACR,IAAI,EAAEG,QAAQ,KAAK;IAClC,MAAMJ,EAAE,GAAG,GAAGF,KAAK,CAACY,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;IAClC,MAAMC,OAAO,GAAG;MACdX,EAAE;MACFC,IAAI;MACJC,IAAI,EAAE;QAAEC,KAAK,EAAEF;MAAK,CAAC;MACrBG;IACF,CAAC;IACDL,QAAQ,CAAEa,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;EAClD,CAAC;EAED,MAAME,OAAO,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;IAClC,MAAMC,OAAO,GAAG;MAAEhB,EAAE,EAAE,GAAGc,MAAM,IAAIC,MAAM,EAAE;MAAED,MAAM;MAAEC;IAAO,CAAC;IAC7DP,QAAQ,CAAES,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;EAClD,CAAC;EAED,MAAME,SAAS,GAAIC,MAAM,IAAK;IAC5BN,OAAO,CAACM,MAAM,CAACL,MAAM,EAAEK,MAAM,CAACJ,MAAM,CAAC;EACvC,CAAC;EAED,oBACEpB,OAAA;IAAKyB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAE7B1B,OAAA,CAACP,SAAS;MACRkC,QAAQ,EAAE,CAAC,GAAGxB,KAAK,EAAE,GAAGS,KAAK,CAAE;MAC/BW,SAAS,EAAEA,SAAU;MACrBK,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAJ,QAAA,gBAEzC1B,OAAA,CAACN,UAAU;QAACqC,KAAK,EAAC,MAAM;QAACC,GAAG,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpCpC,OAAA,CAACL,QAAQ;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAAClC,EAAA,CA7CID,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AA+CV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}