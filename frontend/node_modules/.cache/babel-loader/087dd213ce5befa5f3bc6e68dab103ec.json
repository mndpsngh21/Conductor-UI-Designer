{"ast":null,"code":"var _jsxFileName = \"/media/mandeep/Files/R&D/Workflow-Designer/frontend/src/Flow.js\",\n  _s = $RefreshSig$();\n// src/Flow.js\n\nimport React, { useState } from 'react';\nimport ReactFlow, { Background, Controls, Handle, Position } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  start: StartNode,\n  task: TaskNode,\n  decision: DecisionNode,\n  end: EndNode\n};\n\n// Custom node components\nfunction StartNode({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node start\",\n    children: [data.label, /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n// Define other node components like TaskNode, DecisionNode, EndNode\n_c = StartNode;\nconst Flow = () => {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: '1',\n    type: 'start',\n    data: {\n      label: 'Start'\n    },\n    position: {\n      x: 250,\n      y: 5\n    }\n  }]);\n  const [edges, setEdges] = useState([]);\n  const addNode = (type, position) => {\n    const id = `${nodes.length + 1}`; // Generate a simple unique ID\n    const newNode = {\n      id,\n      type,\n      data: {\n        label: type\n      },\n      position\n    };\n    setNodes(prevNodes => [...prevNodes, newNode]);\n  };\n  const addEdge = (source, target) => {\n    const newEdge = {\n      id: `${source}-${target}`,\n      source,\n      target\n    };\n    setEdges(prevEdges => [...prevEdges, newEdge]);\n  };\n  const onConnect = params => {\n    addEdge(params.source, params.target);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flow-container\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: [...nodes, ...edges],\n      nodeTypes: nodeTypes,\n      onConnect: onConnect,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#aaa\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Flow, \"dMi3dSi/d/ARIer1nc6wbRLYwDE=\");\n_c2 = Flow;\nexport default Flow;\nvar _c, _c2;\n$RefreshReg$(_c, \"StartNode\");\n$RefreshReg$(_c2, \"Flow\");","map":{"version":3,"names":["React","useState","ReactFlow","Background","Controls","Handle","Position","jsxDEV","_jsxDEV","nodeTypes","start","StartNode","task","TaskNode","decision","DecisionNode","end","EndNode","data","className","children","label","type","position","Bottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","Flow","_s","nodes","setNodes","id","x","y","edges","setEdges","addNode","length","newNode","prevNodes","addEdge","source","target","newEdge","prevEdges","onConnect","params","elements","style","width","height","color","gap","_c2","$RefreshReg$"],"sources":["/media/mandeep/Files/R&D/Workflow-Designer/frontend/src/Flow.js"],"sourcesContent":["// src/Flow.js\n\nimport React, { useState } from 'react';\nimport ReactFlow, { Background, Controls, Handle, Position } from 'react-flow-renderer';\n\nconst nodeTypes = {\n  start: StartNode,\n  task: TaskNode,\n  decision: DecisionNode,\n  end: EndNode,\n};\n\n// Custom node components\nfunction StartNode({ data }) {\n  return (\n    <div className=\"node start\">\n      {data.label}\n      <Handle type=\"source\" position={Position.Bottom} />\n    </div>\n  );\n}\n\n// Define other node components like TaskNode, DecisionNode, EndNode\n\nconst Flow = () => {\n  const [nodes, setNodes] = useState([\n    {\n      id: '1',\n      type: 'start',\n      data: { label: 'Start' },\n      position: { x: 250, y: 5 },\n    },\n  ]);\n  \n  const [edges, setEdges] = useState([]);\n\n  const addNode = (type, position) => {\n    const id = `${nodes.length + 1}`; // Generate a simple unique ID\n    const newNode = {\n      id,\n      type,\n      data: { label: type },\n      position,\n    };\n    setNodes((prevNodes) => [...prevNodes, newNode]);\n  };\n\n  const addEdge = (source, target) => {\n    const newEdge = { id: `${source}-${target}`, source, target };\n    setEdges((prevEdges) => [...prevEdges, newEdge]);\n  };\n\n  const onConnect = (params) => {\n    addEdge(params.source, params.target);\n  };\n\n  return (\n    <div className=\"flow-container\">\n      <ReactFlow\n        elements={[...nodes, ...edges]}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        style={{ width: '100%', height: '100%' }}\n      >\n        <Background color=\"#aaa\" gap={16} />\n        <Controls />\n      </ReactFlow>\n      {/* Render NodeOptions and PropertiesPanel based on state if needed */}\n    </div>\n  );\n};\n\nexport default Flow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}